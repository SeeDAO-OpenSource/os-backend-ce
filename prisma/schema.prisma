// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid()) @map("_id")
  wallet    String     @unique
  email     String?
  nickname  String?
  bio       String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  disabled  Boolean    @default(false)
  UserRole  UserRole[]

  @@index([createdAt])
}

model Role {
  id          String     @id @default(cuid()) @map("_id")
  name        String
  group       String?
  description String?
  disabled    Boolean    @default(false)
  UserRole    UserRole[]

  @@index([name])
  @@index([disabled])
}

model UserRole {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    String
  expiredAt DateTime?
  createdAt DateTime  @default(now())

  @@unique([userId, roleId])
}

model PermissionGrant {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  // 权限Code
  name         String
  // 校验Provider Name
  providerName String
  // 校验Provider key
  providerKey  String
  // 过期时间，如果为空则永不过期
  expiredAt    DateTime?

  @@unique([name, providerName, providerKey])
}

model SubDIDMintRecord {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  address   String   @unique
  subDID    String
  timestamp DateTime @default(now())
  verifier  String?
}

model SubDIDCdKey {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  key       String   @unique
  isValid   Boolean
  address   String?
  subDID    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([isValid])
}

model SGNMintRecord {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  address   String
  tokenId   String
  subDID    String
  timestamp DateTime @default(now())
  contract  String

  @@unique([tokenId, contract])
  @@index([tokenId])
  @@index([address])
}

model InfraTool {
  id          String   @id @default(cuid()) @map("_id")
  name        String
  type        String
  logo        String?
  description String?
  url         String?
  createdAt   DateTime @default(now())
  createdBy   String?

  @@index([name])
  @@index([type])
  @@index([createdAt])
}

model Invoice {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  type            String
  registrant      String
  beneficiary     String
  subject         String
  note            String
  value_claim     String
  value_fulfilled String
  register_date   String
  status          String
  links           String[]
  budget          String
  transactions    String[]
}

model Budget {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  related   String?
  proposal  String?
  asset     String?
  name      String
  cap       String?
  statement String?
  createdAt DateTime @default(now())
}

model Asset {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  tokens String[]
  name   String
}

model Token {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  related    Int
  name       String
  type_chain String
  type_token String
  address    String
  token_id   String
}

model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  type        String
  status      String
  assigned_to String
  subtasks    String[]
  creator     String
  reviewer    String
  evaluation  String
  links       String[]
  rewards     String[]
}

model Bounty {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  successors  String[]
  candidates  String
  tasks       String[]
}

model Link {
  id    String   @id @default(uuid()) @map("_id")
  title String
  url   String
  roles String[]
}

model Proposal {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  members         String[]
  title           String
  body            String
  status          String
  tags            String[]
  category        String
  params          String[]
  polls           String[]
  links           String[]
  onchain_history String[]
  onchain_call    String?
  budget          String[]
  empowerments    String[]
  project         String?
  createdAt       DateTime @default(now())
  author          String?
}
